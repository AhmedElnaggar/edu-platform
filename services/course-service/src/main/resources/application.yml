server:
  port: 8083

spring:
  application:
    name: course-service

  # MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://course_user:course_password@localhost:27017/course_service?authSource=admin
      auto-index-creation: true

  # Service Discovery
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: course-service
        health-check-path: /actuator/health
        health-check-interval: 10s
        prefer-ip-address: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    consumer:
      group-id: course-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.edu.course.events"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:myVerySecretKeyForJWTTokenGenerationThatIsAtLeast256BitsLongAndSecure}

# External Services
auth-service:
  url: http://localhost:8081
user-service:
  url: http://localhost:8082

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    mongo:
      enabled: true
    consul:
      enabled: true

# Logging
logging:
  level:
    com.edu.course: INFO
    org.springframework.data.mongodb: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker

  data:
    mongodb:
      uri: mongodb://course-db:27017/course_service

  cloud:
    consul:
      host: consul

  kafka:
    bootstrap-servers: kafka:9092

auth-service:
  url: http://auth-service:8081
user-service:
  url: http://user-service:8082